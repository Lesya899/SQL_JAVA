
/*Напишите функцию add_more_cats(int n), которая будет добавлять в базу данных n случайный кошек.
Для создания случайного котика пользуйтесь функцией Math.random, которая генерирует случайное число от 0 до 1.
Для генерации случайной породы используйте массив из слайда 5 или уже имеющуюся БД. Случайные имена можно получить из массива с кличками кошек.
После добавьте в вашу базу данных 5 тысяч котиков. */

import java.sql.*;

public class MoreCats {
    public static Connection connection;
    public static Statement  statement;
    static String[] names = new String[] {"Гарфилд","Том","Гудвин","Рокки","Ленивец","Пушок","Спорти","Бегемот","Пират","Гудини","Зорро","Саймон","Альбус",
            "Базилио","Леопольд","Нарцисс","Атос","Каспер","Валлито","Оксфорд","Бисквит","Соня","Клеопатра","Цунами","Забияка","Матильда",
            "Кнопка","Масяня","Царапка","Серсея","Ворсинка","Амели","Наоми","Маркиза","Изольда","Вальс","Несквик","Златан","Баскет","Изюм",
            "Цукат","Мокко","Месси","Кокос","Адидас","Бейлиз","Тайгер","Зефир","Мохи","Валенсия","Баунти","Свити","Текила","Ириска","Карамель",
            "Виски","Кукуруза","Гренка","Фасолька","Льдинка","Китана","Офелия","Дайкири","Брусника","Аватар","Космос","Призрак","Изумруд","Плинтус",
            "Яндекс","Крисмас","Метеор","Оптимус","Смайлик","Цельсий","Краска","Дейзи","Пенка","Веста","Астра","Эйприл","Среда","Бусинка","Гайка",
            "Елка","Золушка","Мята","Радость","Сиам","Оскар","Феликс","Гарри","Байрон","Чарли","Симба","Тао","Абу","Ватсон","Енисей","Измир","Кайзер",
            "Васаби","Байкал","Багира","Айрис","Диана","Мими","Сакура","Индия","Тиффани","Скарлетт","Пикси","Лиззи","Алиса","Лило","Ямайка","Пэрис","Мальта","Аляска"};

    static String[] types = new String[]{"Абиссинская кошка",  "Австралийский мист", "Американская жесткошерстная", "Американская короткошерстная", "Американский бобтейл",
            "Американский кёрл", "Балинезийская кошка", "Бенгальская кошка", "Бирманская кошка", "Бомбейская кошка", "Бразильская короткошёрстная", "Британская длинношерстная",
            "Британская короткошерстная", "Бурманская кошка", "Бурмилла кошка", "Гавана", "Гималайская кошка", "Девон-рекс", "Донской сфинкс", "Европейская короткошерстная",
            "Египетская мау", "Канадский сфинкс", "Кимрик", "Корат", "Корниш-рекс", "Курильский бобтейл", "Лаперм", "Манчкин", "Мейн-ку́н", "Меконгский бобтейл", "Мэнкс кошка",
            "Наполеон", "Немецкий рекс", "Нибелунг", "Норвежская лесная кошка", "Ориентальная кошка", "Оцикет", "Персидская кошка", "Петерболд", "Пиксибоб", "Рагамаффин",
            "Русская голубая кошка",  "Рэгдолл", "Саванна", "Селкирк-рекс", "Сиамская кошка", "Сибирская кошка", "Сингапурская кошка", "Скоттиш-фолд", "Сноу-шу", "Сомалийская кошка",
            "Тайская кошка", "Тойгер",  "Тонкинская кошка", "Турецкая ангорская кошка", "Турецкий ван", "Украинский левкой", "Чаузи", "Шартрез",  "Экзотическая короткошерстная", "Японский бобтейл"};



    //подключаемся к БД
    static void connectDataBase() throws ClassNotFoundException, SQLException {
        //проверяем наличие JDBC драйвера для работы с БД
        Class.forName("org.sqlite.JDBC");
        //устанавливаем соединение с СУБД. По переданному адресу, JDBC сама определит тип и местоположение нашей СУБД
        // и вернёт Connection, который мы можем использовать для связи с БД
        connection = DriverManager.getConnection("jdbc:sqlite:My_cats.db");
        statement = connection.createStatement(); //создаем объект Statement для отправки операторов SQL в базу данных
    }

    //метод добавляет в таблицу тип кошки
    static void insertType(String type) throws SQLException {
        statement.execute("INSERT INTO types ('type') VALUES ('" + type + "')");
    }

    //ResultSet предназначен для работы с таблицей данных, полученной в результате обработки запроса
    static ResultSet getType(String type) throws SQLException {
        return statement.executeQuery("SELECT * FROM types WHERE type = '" + type + "'");
    }

    //метод добавляет кошку
    static void insertCat(String name, String type, int age, Double weight) throws SQLException {
        int id;
        if (!getType(type).isBeforeFirst()) { //если типа нет
            insertType(type); //то добавляем тип
        }
        id = getType(type).getInt("id");
        statement.execute("INSERT INTO cats ('name', 'type_id', 'age', 'weight') VALUES ('" + name + "', " + id + ", " + age + ", " + weight + ")");
    }

   //метод добавляет в базу данных n случайный кошек
    static void addMoreCats(int n) throws SQLException {
        for (int i = 0; i < n; i++) {
            insertCat(names[(int) ((names.length - 1) * Math.random())], types[(int) ((types.length - 1) * Math.random())],  (int) (8 * Math.random()), 6 * Math.random());

        }
    }

    public static void main(String[] args) throws ClassNotFoundException, SQLException {
        MoreCats.connectDataBase();
        MoreCats.addMoreCats(5000);
        statement.close(); //немедленно освобождает базу данных Statement объекта и ресурсы JDBC вместо того, чтобы ждать, пока это произойдет, когда он будет автоматически закрыт
        connection.close(); // отключение от БД
    }
}
